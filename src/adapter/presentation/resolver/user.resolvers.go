package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.48

import (
	"context"
	"fmt"

	"github.com/yuorei/bukubukubooking-back/graph/generated"
	"github.com/yuorei/bukubukubooking-back/src/domain"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input domain.CreateUserInput) (*domain.CreateUserPayload, error) {
	panic(fmt.Errorf("not implemented: CreateUser - createUser"))
}

// UpdateUser is the resolver for the updateUser field.
func (r *mutationResolver) UpdateUser(ctx context.Context, input domain.UpdateUserInput) (*domain.UpdateUserPayload, error) {
	panic(fmt.Errorf("not implemented: UpdateUser - updateUser"))
}

// DeleteUser is the resolver for the deleteUser field.
func (r *mutationResolver) DeleteUser(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteUser - deleteUser"))
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id string) (*domain.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*domain.User, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// Books is the resolver for the books field.
func (r *userResolver) Books(ctx context.Context, obj *domain.User) ([]*domain.Book, error) {
	panic(fmt.Errorf("not implemented: Books - books"))
}

// BooksLent is the resolver for the booksLent field.
func (r *userResolver) BooksLent(ctx context.Context, obj *domain.User) ([]*domain.Book, error) {
	panic(fmt.Errorf("not implemented: BooksLent - booksLent"))
}

// BooksBorrowed is the resolver for the booksBorrowed field.
func (r *userResolver) BooksBorrowed(ctx context.Context, obj *domain.User) ([]*domain.Book, error) {
	panic(fmt.Errorf("not implemented: BooksBorrowed - booksBorrowed"))
}

// Requests is the resolver for the requests field.
func (r *userResolver) Requests(ctx context.Context, obj *domain.User) ([]*domain.Request, error) {
	panic(fmt.Errorf("not implemented: Requests - requests"))
}

// Messages is the resolver for the messages field.
func (r *userResolver) Messages(ctx context.Context, obj *domain.User) ([]*domain.Message, error) {
	panic(fmt.Errorf("not implemented: Messages - messages"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// User returns generated.UserResolver implementation.
func (r *Resolver) User() generated.UserResolver { return &userResolver{r} }

type mutationResolver struct{ *Resolver }
type userResolver struct{ *Resolver }
